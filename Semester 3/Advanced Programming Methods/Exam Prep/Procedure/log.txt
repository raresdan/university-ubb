Id=1
ExeStack:
int v
int w
v = 2
w = 5
call sum([(v * 10), w])
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:

Output:

File Table:

Heap Table:



Id=1
ExeStack:
int w
v = 2
w = 5
call sum([(v * 10), w])
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
v = 0

Output:

File Table:

Heap Table:



Id=1
ExeStack:
int w
v = 2
w = 5
call sum([(v * 10), w])
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
v = 0

Output:

File Table:

Heap Table:



Id=1
ExeStack:
v = 2
w = 5
call sum([(v * 10), w])
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
v = 0
w = 0

Output:

File Table:

Heap Table:



Id=1
ExeStack:
v = 2
w = 5
call sum([(v * 10), w])
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
v = 0
w = 0

Output:

File Table:

Heap Table:



Id=1
ExeStack:
w = 5
call sum([(v * 10), w])
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
v = 2
w = 0

Output:

File Table:

Heap Table:



Id=1
ExeStack:
w = 5
call sum([(v * 10), w])
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
v = 2
w = 0

Output:

File Table:

Heap Table:



Id=1
ExeStack:
call sum([(v * 10), w])
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
v = 2
w = 5

Output:

File Table:

Heap Table:



Id=1
ExeStack:
call sum([(v * 10), w])
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
v = 2
w = 5

Output:

File Table:

Heap Table:



Id=1
ExeStack:
int v
v = (a + b)
print(v)
return
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
a = 20
b = 5

Output:

File Table:

Heap Table:



Id=1
ExeStack:
int v
v = (a + b)
print(v)
return
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
a = 20
b = 5

Output:

File Table:

Heap Table:



Id=1
ExeStack:
v = (a + b)
print(v)
return
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
a = 20
b = 5
v = 0

Output:

File Table:

Heap Table:



Id=1
ExeStack:
v = (a + b)
print(v)
return
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
a = 20
b = 5
v = 0

Output:

File Table:

Heap Table:



Id=1
ExeStack:
print(v)
return
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
a = 20
b = 5
v = 25

Output:

File Table:

Heap Table:



Id=1
ExeStack:
return
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
a = 20
b = 5
v = 25

Output:
25

File Table:

Heap Table:



Id=1
ExeStack:
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
v = 2
w = 5

Output:
25

File Table:

Heap Table:



Id=1
ExeStack:
print(v)
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
v = 2
w = 5

Output:
25

File Table:

Heap Table:



Id=1
ExeStack:
fork(call product([v, w]); fork(call sum([v, w])))

SymTable:
v = 2
w = 5

Output:
25
2

File Table:

Heap Table:



Id=1
ExeStack:

SymTable:
v = 2
w = 5

Output:
25
2

File Table:

Heap Table:



Id=2
ExeStack:
call product([v, w])
fork(call sum([v, w]))

SymTable:
v = 2
w = 5

Output:
25
2

File Table:

Heap Table:



Id=2
ExeStack:
call product([v, w])
fork(call sum([v, w]))

SymTable:
v = 2
w = 5

Output:
25
2

File Table:

Heap Table:



Id=2
ExeStack:
int v
v = (a * b)
print(v)
return
fork(call sum([v, w]))

SymTable:
a = 2
b = 5

Output:
25
2

File Table:

Heap Table:



Id=2
ExeStack:
int v
v = (a * b)
print(v)
return
fork(call sum([v, w]))

SymTable:
a = 2
b = 5

Output:
25
2

File Table:

Heap Table:



Id=2
ExeStack:
v = (a * b)
print(v)
return
fork(call sum([v, w]))

SymTable:
a = 2
b = 5
v = 0

Output:
25
2

File Table:

Heap Table:



Id=2
ExeStack:
v = (a * b)
print(v)
return
fork(call sum([v, w]))

SymTable:
a = 2
b = 5
v = 0

Output:
25
2

File Table:

Heap Table:



Id=2
ExeStack:
print(v)
return
fork(call sum([v, w]))

SymTable:
a = 2
b = 5
v = 10

Output:
25
2

File Table:

Heap Table:



Id=2
ExeStack:
return
fork(call sum([v, w]))

SymTable:
a = 2
b = 5
v = 10

Output:
25
2
10

File Table:

Heap Table:



Id=2
ExeStack:
fork(call sum([v, w]))

SymTable:
v = 2
w = 5

Output:
25
2
10

File Table:

Heap Table:



Id=2
ExeStack:

SymTable:
v = 2
w = 5

Output:
25
2
10

File Table:

Heap Table:



Id=3
ExeStack:
call sum([v, w])

SymTable:
v = 2
w = 5

Output:
25
2
10

File Table:

Heap Table:



Id=3
ExeStack:
int v
v = (a + b)
print(v)
return

SymTable:
a = 2
b = 5

Output:
25
2
10

File Table:

Heap Table:



Id=3
ExeStack:
int v
v = (a + b)
print(v)
return

SymTable:
a = 2
b = 5

Output:
25
2
10

File Table:

Heap Table:



Id=3
ExeStack:
v = (a + b)
print(v)
return

SymTable:
a = 2
b = 5
v = 0

Output:
25
2
10

File Table:

Heap Table:



Id=3
ExeStack:
v = (a + b)
print(v)
return

SymTable:
a = 2
b = 5
v = 0

Output:
25
2
10

File Table:

Heap Table:



Id=3
ExeStack:
print(v)
return

SymTable:
a = 2
b = 5
v = 7

Output:
25
2
10

File Table:

Heap Table:



Id=3
ExeStack:
return

SymTable:
a = 2
b = 5
v = 7

Output:
25
2
10
7

File Table:

Heap Table:



Id=3
ExeStack:

SymTable:
v = 2
w = 5

Output:
25
2
10
7

File Table:

Heap Table:



